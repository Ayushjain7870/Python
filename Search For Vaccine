import requests
import json
#notification Manager
import winrt.windows.ui.notifications as notifications
import winrt.windows.data.xml.dom as dom

app = '{1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\\WindowsPowerShell\\v1.0\\powershell.exe'

#create notifier
nManager = notifications.ToastNotificationManager
notifier = nManager.create_toast_notifier(app)

global year

def validate(d, m, y):
    boo = False
    if d > 0 and d < 31:
        if m > 0 and m < 13:
            if y > 2020 and y < 2100:
                boo = True
            else:
                print('Invalid year - Only type last two digits - 2021 : 21')               
        else:
            print('Invalid Month')
    else:
        print('Invalid Date')
    return boo

print('Enter date - DD MM YY')
date,month,year = input().split()
pincode = input('Enter Pincode\n')
year = int(year)
date = int(date)
month = int(month)
year += 2000



def callApi(date, month, year):
    headers1 ={'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',}
    url = f'https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode={pincode}&date={date}-{month}-{year}'
    print(url)
    response = requests.get(url, headers=headers1)
    if response.status_code == 200:
        jsonObj = json.loads(response.text)
        val = jsonObj["sessions"]
        lenghtOfVal = len(val)
        dash = '--------------------------------------------------------'
        #print(lenghtOfVal)
        for i in range(0, lenghtOfVal):
            print(dash)
            print('name is = ',val[i]['name'])
            print('address is = ',val[i]['address'])    
            print('fee_typ is = ',val[i]['fee_type'])
            print('min_age_limit is = ',val[i]['min_age_limit'])    
            print('vaccine  is = ',val[i]['vaccine'])
            print('slots is = ',val[i]['slots'])    
            print('available_capacity is = ',val[i]['available_capacity'])
            print(dash)
    #define your notification as string
        sampleData = val[0]['name'] + val[i]['vaccine'] 


        tString = f"""
            <toast>
            <visual>
              <binding template='ToastGeneric'>
                <text>Vaccines available of your selected criteria</text>
                <text>{sampleData}</text>
              </binding>
            </visual>
            <actions>
              <action
                content="Delete"
                arguments="action=delete"/>
              <action
                content="Dismiss"
                arguments="action=dismiss"/>
            </actions>        
          </toast>
            """
        #convert notification to an XmlDocument
        xDoc = dom.XmlDocument()
        xDoc.load_xml(tString)



#display notification
notifier.show(notifications.ToastNotification(xDoc))


if(validate(date, month, year)):
    callApi(date,month, year)
    
else:
    print('false')

print('Execution Complete')



















